{"version":3,"sources":["components/PlayerCard.js","components/StatsBox.js","images/mlblogo.jpg","components/LineGraph.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerCard","batter_one","batter_one_image","className","src","alt","StatsBox","batter_one_stats","total_at_bat","i","length","total_walks","total_hits","total_hit_by_pitch","total_home_runs","total_runs_batted_in","total_sacrifice_flies","total_bases","total_avg","toFixed","total_on_base_percentage","total_slugging","total_ops","parseFloat","colSpan","LineGraph","graphData","totalData","hitTotal","abTotal","currentAvg","avg","H","AB","push","tbTotal","opsAbTotal","opsHitTotal","bbTotal","hbpTotal","sfTotal","currentOPS","ops","TB","BB","HBP","SF","newData","gameDate","slice","formatData","console","log","ResponsiveContainer","width","aspect","LineChart","height","data","margin","top","right","left","bottom","YAxis","stroke","XAxis","dataKey","Tooltip","Legend","CartesianGrid","Line","type","dot","strokeWidth","Main","state","batters","batter_two","batter_three","batter_prop_passed","batter_two_image","batter_three_image","batter_image_passed","batter_two_stats","batter_three_stats","batter_stats_passed","handleBatterOneClick","bind","handleBatterTwoClick","handleBatterThreeClick","a","axios","get","headers","then","response","setState","tempToken","Cookies","set","expires","catch","e","error","new_batter_one_image","new_batter_two_image","new_batter_three_image","batter_one_id","batter_two_id","batter_three_id","this","getTempToken","getAllBatters","getAllBattersStats","mlblogo","onClick","myfunction","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f771cffd.chunk.js","sourcesContent":["import React from 'react';\nimport './PlayerCard.css';\n\nconst PlayerCard = ({ batter_one, batter_one_image }) => {\n\n    return (\n        <div className='baseball_card'>\n            <img className='batter_image' src={`${batter_one_image}`} alt='batter_image'></img>\n            <img className='team_image' src={`${batter_one['teamImage']}`} alt='team_image'></img>\n            <h1 className='batter_name'>{batter_one['fullName']}</h1>\n        </div>\n    )\n}\n\nexport default PlayerCard;","import React from 'react';\nimport Main from './Main';\nimport './PlayerCard.css';\nimport './StatsBox.css';\n\nconst StatsBox = ({ batter_one, batter_one_stats }) => {\n    // To find what I need to add \n    // console.log(batter_one_stats)\n\n    // Find total At Bat (AB) 2018 \n    let total_at_bat = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_at_bat += batter_one_stats[i]['AB']\n    }\n\n    // Find total walks (BB) 2018\n    let total_walks = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_walks += batter_one_stats[i]['BB']\n    }\n\n    // Find total hits (H) 2018\n    let total_hits = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_hits += batter_one_stats[i]['H']\n    }\n\n    // Find total Hit by Pitch (HBP) 2018\n    let total_hit_by_pitch = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_hit_by_pitch += batter_one_stats[i]['HBP']\n    }\n\n    // Find total Home runs (HR) 2018\n    let total_home_runs = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_home_runs += batter_one_stats[i]['HR']\n    }\n\n    // Find total Strike Outs (K) 2018\n    let total_strike_outs = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_strike_outs += batter_one_stats[i]['K']\n    }\n\n    // Find total Plate Appearences (PA) 2018 \n    let total_plate_appearences = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_plate_appearences += batter_one_stats[i]['PA']\n    }\n\n    // Find total Runs batted in (RBI) 2018\n    let total_runs_batted_in = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_runs_batted_in += batter_one_stats[i]['RBI']\n    }\n\n    // Find total sacrifice flies (SF) in 2018\n    let total_sacrifice_flies = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_sacrifice_flies += batter_one_stats[i]['SF']\n    }\n\n\n    // Find total Bases (TB) in 2018 \n    let total_bases = 0;\n    for (let i = 0; i < batter_one_stats.length; i++) {\n        total_bases += batter_one_stats[i]['TB']\n    }\n\n    // Find batting average (AVG) in 2018\n    // Batting Average = Total Hits / Total At Bats\n    let total_avg = (total_hits / total_at_bat).toFixed(3)\n\n    // Find total On-base-percentage (OBP) in 2018\n    let total_on_base_percentage = ((total_hits + total_walks + total_hit_by_pitch) / (total_at_bat + total_walks + total_hit_by_pitch + total_sacrifice_flies)).toFixed(3)\n\n    // Find total Slugging (SLG) in 2018\n    let total_slugging = ((total_bases) / (total_at_bat)).toFixed(3)\n\n    // Find total On Base Plus Sligging (OPS) in 2018\n    let total_ops = (parseFloat(total_on_base_percentage) + parseFloat(total_slugging)).toFixed(3)\n\n    //BB, H, HBP, HR, K, PA, RBI, SF, TB \n    return (\n        <div className='stats_box'>\n            <h1 className = 'batter_name_stats'>{batter_one['fullName']}</h1>\n            <table className='stats_table'>\n                <thead>\n                    <tr>\n                        <th className='stats_header' colSpan=\"3\">2018 Batting Stats</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className='stats'>AB: {total_at_bat}</td>\n                        <td className='stats'>H: {total_hits}</td>\n                        <td className='stats'>HR: {total_home_runs}</td>\n                    </tr>\n                    <tr>\n                        <td className='stats'>RBI: {total_runs_batted_in}</td>\n                        <td className='stats'>AVG: {total_avg}</td>\n                        <td className='stats'>OBP: {total_on_base_percentage}</td>\n                    </tr>\n                    <tr>\n                        <td className='stats'>SLG: {total_slugging}</td>\n                        <td className='stats'>OPS: {total_ops}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default StatsBox;","export default __webpack_public_path__ + \"static/media/mlblogo.5ae49ae7.jpg\";","import './LineGraph.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\nconst LineGraph = ({ batter_one_stats }) => {\n\n    // Function to format AVG and OPS data into an object for line graph \n    function formatData() {\n\n        // Variables for calculating running AVG\n        let totalData = []\n        let hitTotal = 0;\n        let abTotal = 0;\n        let currentAvg = 0;\n        let avg = []\n\n        // For-loop to calculate running AVG and push to array\n        for (let i = 0; i < batter_one_stats.length; i++) {\n            hitTotal = hitTotal + batter_one_stats[i].H\n            abTotal = abTotal + batter_one_stats[i].AB\n            currentAvg = hitTotal / abTotal\n            avg.push(currentAvg.toFixed(3))\n        }\n\n        // Variables for calculating running OPS\n        let tbTotal = 0;\n        let opsAbTotal = 0;\n        let opsHitTotal = 0;\n        let bbTotal = 0;\n        let hbpTotal = 0;\n        let sfTotal = 0;\n        let currentOPS = 0;\n        let ops = []\n\n        // For-loop to calculate running OPS and push to array\n        for (let i = 0; i < batter_one_stats.length; i++) {\n            opsHitTotal = opsHitTotal + batter_one_stats[i].H\n            opsAbTotal = opsAbTotal + batter_one_stats[i].AB\n            tbTotal = tbTotal + batter_one_stats[i].TB\n            bbTotal = bbTotal + batter_one_stats[i].BB\n            hbpTotal = hbpTotal + batter_one_stats[i].HBP\n            sfTotal = sfTotal + batter_one_stats[i].SF\n            let SLG = (tbTotal) / (opsAbTotal)\n            let OBP = ((opsHitTotal + bbTotal + hbpTotal) / (opsAbTotal + bbTotal + sfTotal + hbpTotal))\n            currentOPS = (SLG) + (OBP)\n            ops.push((currentOPS).toFixed(3))\n        }\n\n        // Formatting date, AVG array, and OPS array in object for line graph\n        for (let i = 0; i < batter_one_stats.length; i++) {\n            let newData = {}\n            newData['date'] = (batter_one_stats[i].gameDate).slice(5, 10)\n            newData['AVG'] = avg[i]\n            newData['OPS'] = ops[i]\n            totalData.push(newData)\n        }\n        return totalData\n    }\n\n    // Variable for formatted data \n    let graphData = formatData(batter_one_stats)\n\n    console.log(graphData)\n\n    return (\n        <div>\n            <div className = 'graph_title'>\n                <h1>AVG and OPS over 2018</h1>\n            </div>\n            <ResponsiveContainer width=\"100%\" aspect={3}>\n                <LineChart\n                    width={1200}\n                    height={400}\n                    data={graphData}\n                    margin={{ top: 5, right: 0, left: 0, bottom: 5 }}\n                >\n                    <YAxis stroke=\"black\" />\n                    <XAxis dataKey=\"date\" stroke=\"black\" />\n                    <Tooltip />\n                    <Legend />\n                    <CartesianGrid stroke=\"#f5f5f5\" />\n                    <Line type=\"monotone\" dataKey=\"OPS\" stroke=\"#002D72\" dot={false} strokeWidth={2}/>\n                    <Line type=\"monotone\" dataKey=\"AVG\" stroke=\"#D50032\" dot={false} strokeWidth={2}/>\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n\n    );\n}\n\nexport default LineGraph;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport PlayerCard from './PlayerCard';\nimport StatsBox from './StatsBox';\nimport './Main.css';\nimport mlblogo from '../images/mlblogo.jpg';\nimport LineGraph from './LineGraph';\n\n\n\nclass Main extends Component {\n    /**\n     * Constructor that gets all 3 batters basic info and \n     * then over data for each batter and puts it into an \n     * object that I can use\n     **/\n    constructor() {\n        super();\n        this.state = {\n            batters: [],\n            batter_one: [],\n            batter_two: [],\n            batter_three: [],\n            batter_prop_passed: [],\n            batter_one_image: '',\n            batter_two_image: '',\n            batter_three_image: '',\n            batter_image_passed: '',\n            batter_one_stats: [],\n            batter_two_stats: [],\n            batter_three_stats: [],\n            batter_stats_passed: [],\n        }\n        this.handleBatterOneClick = this.handleBatterOneClick.bind(this)\n        this.handleBatterTwoClick = this.handleBatterTwoClick.bind(this)\n        this.handleBatterThreeClick = this.handleBatterThreeClick.bind(this)\n    }\n\n    /**\n     * Function gets the temporary token, and stores it into Cookies \n     * with expiration in 1 day\n     * So you don't have to call for tempToken each load\n     * \n     */\n    async getTempToken() {\n        axios.get('https://project.trumedianetworks.com/api/token', {\n            headers: {\n                'apiKey': `199b9b1a-1973-4aa9-9f7c-f22b9a9b4cbe`\n            }\n        })\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({ tempToken: data['token'] })\n                Cookies.set('tempToken', data['token'], { expires: 1 })\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n    }\n\n\n    /**\n     * Function gets all the basic batter data, and stores it an object\n     * Also gets the batter Id state to use in next api call\n     */\n    async getAllBatters() {\n        let tempToken = Cookies.get('tempToken')\n        axios.get('https://project.trumedianetworks.com/api/mlb/players', {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                // Changing state for passing into child components\n                this.setState({ batter_one: data[0] })\n                //console.log(this.state.batter_one)\n                this.setState({ batter_two: data[1] })\n                this.setState({ batter_three: data[2] })\n\n                //Saving batter id cookies for next api call \n                Cookies.set('batter_one_id', this.state.batter_one['playerId'])\n                Cookies.set('batter_two_id', this.state.batter_two['playerId'])\n                Cookies.set('batter_three_id', this.state.batter_three['playerId'])\n\n                //Fixing Image url for batter one \n                let batter_one_image = this.state.batter_one['playerImage']\n                let new_batter_one_image = batter_one_image.slice(0, 8) + batter_one_image.slice(12)\n                this.setState({ batter_one_image: new_batter_one_image })\n                //console.log(this.state.batter_one_image)\n\n                //Fixing Image url for batter two \n                let batter_two_image = this.state.batter_two['playerImage']\n                let new_batter_two_image = batter_two_image.slice(0, 8) + batter_two_image.slice(12)\n                this.setState({ batter_two_image: new_batter_two_image })\n                //console.log(this.state.batter_two_image)\n\n                //Fixing Image url for batter three \n                let batter_three_image = this.state.batter_three['playerImage']\n                let new_batter_three_image = batter_three_image.slice(0, 8) + batter_three_image.slice(12)\n                this.setState({ batter_three_image: new_batter_three_image })\n                //console.log(this.state.batter_three_image)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n    }\n\n\n    //\n    async getAllBattersStats() {\n        let tempToken = Cookies.get('tempToken')\n        let batter_one_id = Cookies.get('batter_one_id')\n        let batter_two_id = Cookies.get('batter_two_id')\n        let batter_three_id = Cookies.get('batter_three_id')\n\n        //Getting Batter one stats over time \n        axios.get(`https://project.trumedianetworks.com/api/mlb/player/${batter_one_id}`, {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                this.setState({ batter_one_stats: data })\n                this.setState({batter_prop_passed: this.state.batter_one})\n                this.setState({batter_image_passed: this.state.batter_one_image})\n                this.setState({batter_stats_passed: this.state.batter_one_stats})\n                //console.log(this.state.batter_one_stats)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n\n        //Getting Batter two stats over time \n        axios.get(`https://project.trumedianetworks.com/api/mlb/player/${batter_two_id}`, {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                this.setState({ batter_two_stats: data })\n                //console.log(this.state.batter_two_stats)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n\n        //Getting Batter three stats over time \n        axios.get(`https://project.trumedianetworks.com/api/mlb/player/${batter_three_id}`, {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                this.setState({ batter_three_stats: data })\n                //console.log(this.state.batter_three_stats)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n    }\n\n\n    /**\n     * When component mounts all api calls occur\n     */\n    componentDidMount() {\n        this.getTempToken()\n        this.getAllBatters()\n        this.getAllBattersStats()\n        \n    }\n\n\n    // Handle when batter one is selected \n    handleBatterOneClick(){\n        this.setState({batter_prop_passed: this.state.batter_one})\n        this.setState({batter_image_passed: this.state.batter_one_image})\n        this.setState({batter_stats_passed: this.state.batter_one_stats})\n    }\n\n    // Handle when batter two is selected \n    handleBatterTwoClick(){\n        this.setState({batter_prop_passed: this.state.batter_two})\n        this.setState({batter_image_passed: this.state.batter_two_image})\n        this.setState({batter_stats_passed: this.state.batter_two_stats})\n    }\n\n     // Handle when batter three is selected \n     handleBatterThreeClick(){\n        this.setState({batter_prop_passed: this.state.batter_three})\n        this.setState({batter_image_passed: this.state.batter_three_image})\n        this.setState({batter_stats_passed: this.state.batter_three_stats})\n    }\n\n\n    render() {\n        //Props being passed to children\n        const { batter_prop_passed, batter_image_passed, batter_stats_passed, batter_one, batter_one_image, batter_one_stats, batter_two_image, batter_three_image, batter_three, batter_two } = this.state;\n        return <div className='main_page'>\n            <div className=\"top_header_container\">\n                <div className=\"logo_name_container\">\n                    <img className='logo' src={mlblogo} alt='MLB Logo' />\n                    <h2 className=\"project_name\">Bat Attack</h2>\n                </div>\n                <h2 className=\"batter_selector\">Choose your batter:</h2>\n                <div>\n                    <button className = \"selector_button\" onClick ={this.handleBatterOneClick}>\n                        <img className=\"button_image\" src={batter_one_image} alt=\"Batter One Image\" onClick={this.myfunction} />\n                        <h3 className=\"button_name\">{batter_one['fullName']}</h3>\n                    </button>\n                </div>\n                <div>\n                    <button className = \"selector_button\" onClick ={this.handleBatterTwoClick}>\n                        <img className=\"button_image\" src={batter_two_image} alt=\"Batter Two Image\" onClick={this.myfunction} />\n                        <h3 className=\"button_name\">{batter_two['fullName']}</h3>\n                    </button>\n                    <h3 className=\"button_name\">{batter_two['fullName']}</h3>\n                </div>\n                <div>\n                    <button className = \"selector_button\" onClick ={this.handleBatterThreeClick}>\n                        <img className=\"button_image\" src={batter_three_image} alt=\"Batter Three Image\"  onClick={this.myfunction} />\n                        <h3 className=\"button_name\">{batter_three['fullName']}</h3>\n                    </button>\n\n                </div>\n            </div>\n            <div className=\"pic_stats\">\n                <PlayerCard batter_one={batter_prop_passed}\n                    batter_one_image={batter_image_passed} />\n                <StatsBox batter_one={batter_prop_passed}\n                    batter_one_stats={batter_stats_passed} />\n            </div>\n            <div className='line_chart_container'>\n                <LineGraph batter_one_stats={batter_stats_passed} />\n            </div>\n            <div className='glossary_container'>\n                <table className='glossary_table'>\n                    <thead>\n                        <tr>\n                            <th className='glossary_header' colSpan=\"3\">Glossary</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className='stats'>AB: At Bat</td>\n                            <td className='stats'>H: Hits</td>\n                            <td className='stats'>HR: Home Runs</td>\n                        </tr>\n                        <tr>\n                            <td className='stats'>RBI: Runs Batted In</td>\n                            <td className='stats'>AVG: Batting Average</td>\n                            <td className='stats'>OBP: Total On Base Percentage</td>\n                        </tr>\n                        <tr>\n                            <td className='stats'>SLG: Slugging</td>\n                            <td className='stats'>OPS: On Base Percentage Plus Slugging</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    }\n}\n\n\n\n\nexport default Main;\n","import './App.css';\nimport Main from './components/Main.js';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}