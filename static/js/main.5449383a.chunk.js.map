{"version":3,"sources":["components/PlayerCard.js","components/StatsBox.js","images/mlblogo.jpg","components/LineGraph.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerCard","current_batter","current_batter_image","className","src","alt","StatsBox","current_batter_stats","total_at_bat","i","length","total_walks","total_hits","total_hit_by_pitch","total_home_runs","total_runs_batted_in","total_sacrifice_flies","total_bases","total_avg","toFixed","total_on_base_percentage","total_slugging","total_ops","parseFloat","colSpan","LineGraph","graphData","totalData","hitTotal","abTotal","currentAvg","avg","H","AB","push","tbTotal","opsAbTotal","opsHitTotal","bbTotal","hbpTotal","sfTotal","currentOPS","ops","TB","BB","HBP","SF","newData","gameDate","slice","formatData","ResponsiveContainer","width","aspect","LineChart","height","data","margin","top","right","left","bottom","YAxis","stroke","XAxis","dataKey","Tooltip","Legend","CartesianGrid","Line","type","dot","strokeWidth","Main","state","batters","batter_one","batter_two","batter_three","batter_prop_passed","batter_one_image","batter_two_image","batter_three_image","batter_image_passed","batter_one_stats","batter_two_stats","batter_three_stats","batter_stats_passed","loading","handleBatterOneClick","bind","handleBatterTwoClick","handleBatterThreeClick","a","Cookies","get","axios","headers","then","response","setState","tempToken","set","expires","catch","e","console","error","new_batter_one_image","new_batter_two_image","new_batter_three_image","batter_one_id","batter_two_id","batter_three_id","this","getAllBatters","getTempToken","getAllBattersStats","mlblogo","onClick","myfunction","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5449383a.chunk.js","sourcesContent":["import React from 'react';\nimport './PlayerCard.css';\n\nconst PlayerCard = ({ current_batter, current_batter_image }) => {\n\n    return (\n        <div className='baseball_card'>\n            <img className='batter_image' src={`${current_batter_image}`} alt='batter_image'></img>\n            <img className='team_image' src={`${current_batter['teamImage']}`} alt='team_image'></img>\n            <h1 className='batter_name'>{current_batter['fullName']}</h1>\n        </div>\n    )\n}\n\nexport default PlayerCard;","import React from 'react';\nimport Main from './Main';\nimport './PlayerCard.css';\nimport './StatsBox.css';\n\nconst StatsBox = ({ current_batter, current_batter_stats }) => {\n    // To find what I need to add \n    // console.log(batter_one_stats)\n\n    // Find total At Bat (AB) 2018 \n    let total_at_bat = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_at_bat += current_batter_stats[i]['AB']\n    }\n\n    // Find total walks (BB) 2018\n    let total_walks = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_walks += current_batter_stats[i]['BB']\n    }\n\n    // Find total hits (H) 2018\n    let total_hits = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_hits += current_batter_stats[i]['H']\n    }\n\n    // Find total Hit by Pitch (HBP) 2018\n    let total_hit_by_pitch = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_hit_by_pitch += current_batter_stats[i]['HBP']\n    }\n\n    // Find total Home runs (HR) 2018\n    let total_home_runs = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_home_runs += current_batter_stats[i]['HR']\n    }\n\n    // Find total Strike Outs (K) 2018\n    let total_strike_outs = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_strike_outs += current_batter_stats[i]['K']\n    }\n\n    // Find total Plate Appearences (PA) 2018 \n    let total_plate_appearences = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_plate_appearences += current_batter_stats[i]['PA']\n    }\n\n    // Find total Runs batted in (RBI) 2018\n    let total_runs_batted_in = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_runs_batted_in += current_batter_stats[i]['RBI']\n    }\n\n    // Find total sacrifice flies (SF) in 2018\n    let total_sacrifice_flies = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_sacrifice_flies += current_batter_stats[i]['SF']\n    }\n\n\n    // Find total Bases (TB) in 2018 \n    let total_bases = 0;\n    for (let i = 0; i < current_batter_stats.length; i++) {\n        total_bases += current_batter_stats[i]['TB']\n    }\n\n    // Find batting average (AVG) in 2018\n    // Batting Average = Total Hits / Total At Bats\n    let total_avg = (total_hits / total_at_bat).toFixed(3)\n\n    // Find total On-base-percentage (OBP) in 2018\n    let total_on_base_percentage = ((total_hits + total_walks + total_hit_by_pitch) / (total_at_bat + total_walks + total_hit_by_pitch + total_sacrifice_flies)).toFixed(3)\n\n    // Find total Slugging (SLG) in 2018\n    let total_slugging = ((total_bases) / (total_at_bat)).toFixed(3)\n\n    // Find total On Base Plus Sligging (OPS) in 2018\n    let total_ops = (parseFloat(total_on_base_percentage) + parseFloat(total_slugging)).toFixed(3)\n\n    //BB, H, HBP, HR, K, PA, RBI, SF, TB \n    return (\n        <div className='stats_box'>\n            <h1 className = 'batter_name_stats'>{current_batter['fullName']}</h1>\n            <table className='stats_table'>\n                <thead>\n                    <tr>\n                        <th className='stats_header' colSpan=\"3\">2018 Batting Stats</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className='stats'>AB: {total_at_bat}</td>\n                        <td className='stats'>H: {total_hits}</td>\n                        <td className='stats'>HR: {total_home_runs}</td>\n                    </tr>\n                    <tr>\n                        <td className='stats'>RBI: {total_runs_batted_in}</td>\n                        <td className='stats'>AVG: {total_avg}</td>\n                        <td className='stats'>OBP: {total_on_base_percentage}</td>\n                    </tr>\n                    <tr>\n                        <td className='stats'>SLG: {total_slugging}</td>\n                        <td className='stats'>OPS: {total_ops}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default StatsBox;","export default __webpack_public_path__ + \"static/media/mlblogo.5ae49ae7.jpg\";","import './LineGraph.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\nconst LineGraph = ({ current_batter_stats }) => {\n\n    // Function to format AVG and OPS data into an object for line graph \n    function formatData() {\n\n        // Variables for calculating running AVG\n        let totalData = []\n        let hitTotal = 0;\n        let abTotal = 0;\n        let currentAvg = 0;\n        let avg = []\n\n        // For-loop to calculate running AVG and push to array\n        for (let i = 0; i < current_batter_stats.length; i++) {\n            hitTotal = hitTotal + current_batter_stats[i].H\n            abTotal = abTotal + current_batter_stats[i].AB\n            currentAvg = hitTotal / abTotal\n            avg.push(currentAvg.toFixed(3))\n        }\n\n        // Variables for calculating running OPS\n        let tbTotal = 0;\n        let opsAbTotal = 0;\n        let opsHitTotal = 0;\n        let bbTotal = 0;\n        let hbpTotal = 0;\n        let sfTotal = 0;\n        let currentOPS = 0;\n        let ops = []\n\n        // For-loop to calculate running OPS and push to array\n        for (let i = 0; i < current_batter_stats.length; i++) {\n            opsHitTotal = opsHitTotal + current_batter_stats[i].H\n            opsAbTotal = opsAbTotal + current_batter_stats[i].AB\n            tbTotal = tbTotal + current_batter_stats[i].TB\n            bbTotal = bbTotal + current_batter_stats[i].BB\n            hbpTotal = hbpTotal + current_batter_stats[i].HBP\n            sfTotal = sfTotal + current_batter_stats[i].SF\n            let SLG = (tbTotal) / (opsAbTotal)\n            let OBP = ((opsHitTotal + bbTotal + hbpTotal) / (opsAbTotal + bbTotal + sfTotal + hbpTotal))\n            currentOPS = (SLG) + (OBP)\n            ops.push((currentOPS).toFixed(3))\n        }\n\n        // Formatting date, AVG array, and OPS array in object for line graph\n        for (let i = 0; i < current_batter_stats.length; i++) {\n            let newData = {}\n            newData['date'] =  (current_batter_stats[i].gameDate).slice(5, 10)\n            newData['AVG'] = avg[i]\n            newData['OPS'] = ops[i]\n            totalData.push(newData)\n        }\n        return totalData\n    }\n\n    // Variable for formatted data \n    let graphData = formatData (current_batter_stats)\n\n    //console.log(graphData)\n\n    return (\n        <div>\n            <div className = 'graph_title'>\n                <h1>AVG and OPS over 2018</h1>\n            </div>\n            <ResponsiveContainer width=\"100%\" aspect={3}>\n                <LineChart\n                    width={1200}\n                    height={400}\n                    data={graphData}\n                    margin={{ top: 5, right: 0, left: 0, bottom: 5 }}\n                >\n                    <YAxis stroke=\"black\" />\n                    <XAxis dataKey=\"date\" stroke=\"black\" />\n                    <Tooltip />\n                    <Legend />\n                    <CartesianGrid stroke=\"#f5f5f5\" />\n                    <Line type=\"monotone\" dataKey=\"OPS\" stroke=\"#002D72\" dot={false} strokeWidth={2}/>\n                    <Line type=\"monotone\" dataKey=\"AVG\" stroke=\"#D50032\" dot={false} strokeWidth={2}/>\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n\n    );\n}\n\nexport default LineGraph;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport PlayerCard from './PlayerCard';\nimport StatsBox from './StatsBox';\nimport './Main.css';\nimport mlblogo from '../images/mlblogo.jpg';\nimport LineGraph from './LineGraph';\n\n\n\nclass Main extends Component {\n    /**\n     * Constructor that gets all 3 batters basic info and \n     * then over data for each batter and puts it into an \n     * object that I can use\n     **/\n    constructor() {\n        super();\n        this.state = {\n            batters: [],\n            batter_one: [],\n            batter_two: [],\n            batter_three: [],\n            batter_prop_passed: [],\n            batter_one_image: '',\n            batter_two_image: '',\n            batter_three_image: '',\n            batter_image_passed: '',\n            batter_one_stats: [],\n            batter_two_stats: [],\n            batter_three_stats: [],\n            batter_stats_passed: [],\n            loading: 'true'\n        }\n        this.handleBatterOneClick = this.handleBatterOneClick.bind(this)\n        this.handleBatterTwoClick = this.handleBatterTwoClick.bind(this)\n        this.handleBatterThreeClick = this.handleBatterThreeClick.bind(this)\n    }\n\n    /**\n     * Function gets the temporary token, and stores it into Cookies \n     * with expiration in 1 day\n     * So you don't have to call for tempToken each load\n     * \n     */\n\n    async getTempToken() {\n        let tempToken = Cookies.get('tempToken')\n        if (!tempToken) {\n            await axios.get('https://project.trumedianetworks.com/api/token', {\n                headers: {\n                    'apiKey': `199b9b1a-1973-4aa9-9f7c-f22b9a9b4cbe`\n                }\n            })\n                .then(response => response.data)\n                .then((data) => {\n                    this.setState({ tempToken: data['token'] })\n                    Cookies.set('tempToken', data['token'], { expires: 1 })\n                })\n                .catch((e) => {\n                    console.error(e);\n                })\n        }\n    }\n\n\n    /**\n     * Function gets all the basic batter data, and stores it an object\n     * Also gets the batter Id state to use in next api call\n     */\n    async getAllBatters() {\n        let tempToken = Cookies.get('tempToken')\n        await axios.get('https://project.trumedianetworks.com/api/mlb/players', {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                // Changing state for passing into child components\n                this.setState({ batter_one: data[0] })\n                //console.log(this.state.batter_one)\n                this.setState({ batter_two: data[1] })\n                this.setState({ batter_three: data[2] })\n\n                //Saving batter id cookies for next api call \n                Cookies.set('batter_one_id', this.state.batter_one['playerId'])\n                Cookies.set('batter_two_id', this.state.batter_two['playerId'])\n                Cookies.set('batter_three_id', this.state.batter_three['playerId'])\n\n                //Fixing Image url for batter one \n                let batter_one_image = this.state.batter_one['playerImage']\n                let new_batter_one_image = batter_one_image.slice(0, 8) + batter_one_image.slice(12)\n                this.setState({ batter_one_image: new_batter_one_image })\n                //console.log(this.state.batter_one_image)\n\n                //Fixing Image url for batter two \n                let batter_two_image = this.state.batter_two['playerImage']\n                let new_batter_two_image = batter_two_image.slice(0, 8) + batter_two_image.slice(12)\n                this.setState({ batter_two_image: new_batter_two_image })\n                //console.log(this.state.batter_two_image)\n\n                //Fixing Image url for batter three \n                let batter_three_image = this.state.batter_three['playerImage']\n                let new_batter_three_image = batter_three_image.slice(0, 8) + batter_three_image.slice(12)\n                this.setState({ batter_three_image: new_batter_three_image })\n                //console.log(this.state.batter_three_image)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n    }\n\n\n     /**\n     * Function gets all the batter data over 2018, and stores it an object\n     */\n    async getAllBattersStats() {\n        let tempToken = Cookies.get('tempToken')\n        let batter_one_id = Cookies.get('batter_one_id')\n        let batter_two_id = Cookies.get('batter_two_id')\n        let batter_three_id = Cookies.get('batter_three_id')\n\n        //Getting Batter one stats over time \n        await axios.get(`https://project.trumedianetworks.com/api/mlb/player/${batter_one_id}`, {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                this.setState({ batter_one_stats: data })\n                this.setState({ batter_prop_passed: this.state.batter_one })\n                this.setState({ batter_image_passed: this.state.batter_one_image })\n                //console.log(this.state.batter_one_stats)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n\n        //Getting Batter two stats over time \n        await axios.get(`https://project.trumedianetworks.com/api/mlb/player/${batter_two_id}`, {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                this.setState({ batter_two_stats: data })\n                this.setState({ batter_stats_passed: this.state.batter_one_stats })\n                //console.log(this.state.batter_two_stats)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n\n        //Getting Batter three stats over time \n        this.getAllBatters()\n        await axios.get(`https://project.trumedianetworks.com/api/mlb/player/${batter_three_id}`, {\n            headers: {\n                'tempToken': tempToken\n            }\n        })\n            .then(response => response.data)\n            //Setting state with Batter data \n            .then((data) => {\n                this.setState({ batter_three_stats: data })\n                //console.log(this.state.batter_three_stats)\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n\n    }\n\n    /**\n     * When component mounts all api calls occur\n     */\n    async componentDidMount() {\n        await this.getTempToken()\n        await this.getAllBatters()\n        await this.getAllBattersStats()\n    }\n\n\n    // Handle state change when batter one is selected \n    handleBatterOneClick() {\n        this.setState({ batter_prop_passed: this.state.batter_one })\n        this.setState({ batter_image_passed: this.state.batter_one_image })\n        this.setState({ batter_stats_passed: this.state.batter_one_stats })\n        this.setState({ loading: 'false' });\n    }\n\n    // Handle state change when batter two is selected \n    handleBatterTwoClick() {\n        this.setState({ batter_prop_passed: this.state.batter_two })\n        this.setState({ batter_image_passed: this.state.batter_two_image })\n        this.setState({ batter_stats_passed: this.state.batter_two_stats })\n        this.setState({ loading: 'false' });\n    }\n\n    // Handle state change when batter three is selected \n    handleBatterThreeClick() {\n        this.setState({ batter_prop_passed: this.state.batter_three })\n        this.setState({ batter_image_passed: this.state.batter_three_image })\n        this.setState({ batter_stats_passed: this.state.batter_three_stats })\n        this.setState({ loading: 'false' });\n\n    }\n\n\n    render() {\n        if (this.state.loading === 'true') {\n            const { batter_prop_passed, batter_image_passed, batter_stats_passed, batter_one, batter_one_image, batter_one_stats, batter_two_image, batter_three_image, batter_three, batter_two } = this.state;\n            return < div className=\"top_header_container\" >\n                <div className=\"logo_name_container\">\n                    <img className='logo' src={mlblogo} alt='MLB Logo' />\n                    <h2 className=\"project_name\">Bat Attack</h2>\n                </div>\n                <h2 className=\"batter_selector\">Choose your batter:</h2>\n                <div>\n                    <button className=\"selector_button\" onClick={this.handleBatterOneClick}>\n                        <img className=\"button_image\" src={batter_one_image} alt=\"Batter One Image\" onClick={this.myfunction} />\n                        <h3 className=\"button_name\">{batter_one['fullName']}</h3>\n                    </button>\n                </div>\n                <div>\n                    <button className=\"selector_button\" onClick={this.handleBatterTwoClick}>\n                        <img className=\"button_image\" src={batter_two_image} alt=\"Batter Two Image\" onClick={this.myfunction} />\n                        <h3 className=\"button_name\">{batter_two['fullName']}</h3>\n                    </button>\n                </div>\n                <div>\n                    <button className=\"selector_button\" onClick={this.handleBatterThreeClick}>\n                        <img className=\"button_image\" src={batter_three_image} alt=\"Batter Three Image\" onClick={this.myfunction} />\n                        <h3 className=\"button_name\">{batter_three['fullName']}</h3>\n                    </button>\n                </div>\n            </div >\n        }\n\n        if (this.state.loading === 'false') {\n            //Props being passed to children\n            const { batter_prop_passed, batter_image_passed, batter_stats_passed, batter_one, batter_one_image, batter_one_stats, batter_two_image, batter_three_image, batter_three, batter_two } = this.state;\n            return <div className='main_page'>\n                < div className=\"top_header_container\" >\n                    <div className=\"logo_name_container\">\n                        <img className='logo' src={mlblogo} alt='MLB Logo' />\n                        <h2 className=\"project_name\">Bat Attack</h2>\n                    </div>\n                    <h2 className=\"batter_selector\">Choose your batter:</h2>\n                    <div>\n                        <button className=\"selector_button\" onClick={this.handleBatterOneClick}>\n                            <img className=\"button_image\" src={batter_one_image} alt=\"Batter One Image\" onClick={this.myfunction} />\n                            <h3 className=\"button_name\">{batter_one['fullName']}</h3>\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"selector_button\" onClick={this.handleBatterTwoClick}>\n                            <img className=\"button_image\" src={batter_two_image} alt=\"Batter Two Image\" onClick={this.myfunction} />\n                            <h3 className=\"button_name\">{batter_two['fullName']}</h3>\n                        </button>\n                    </div>\n                    <div>\n                        <button className=\"selector_button\" onClick={this.handleBatterThreeClick}>\n                            <img className=\"button_image\" src={batter_three_image} alt=\"Batter Three Image\" onClick={this.myfunction} />\n                            <h3 className=\"button_name\">{batter_three['fullName']}</h3>\n                        </button>\n                    </div>\n                </div >\n                <div className=\"pic_stats\">\n                    <PlayerCard current_batter={batter_prop_passed}\n                        current_batter_image={batter_image_passed} />\n                    <StatsBox current_batter={batter_prop_passed}\n                        current_batter_stats={batter_stats_passed} />\n                </div>\n                <div className='line_chart_container'>\n                    <LineGraph current_batter_stats={batter_stats_passed} />\n                </div>\n                <div className='glossary_container'>\n                    <table className='glossary_table'>\n                        <thead>\n                            <tr>\n                                <th className='glossary_header' colSpan=\"3\">Glossary</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td className='stats'>AB: At Bat</td>\n                                <td className='stats'>H: Hits</td>\n                                <td className='stats'>HR: Home Runs</td>\n                            </tr>\n                            <tr>\n                                <td className='stats'>RBI: Runs Batted In</td>\n                                <td className='stats'>AVG: Batting Average</td>\n                                <td className='stats'>OBP: Total On Base Percentage</td>\n                            </tr>\n                            <tr>\n                                <td className='stats'>SLG: Slugging</td>\n                                <td className='stats'>OPS: On Base Percentage Plus Slugging</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div >\n\n        }\n    }\n}\n\n\n\n\nexport default Main;\n","import './App.css';\nimport Main from './components/Main.js';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}